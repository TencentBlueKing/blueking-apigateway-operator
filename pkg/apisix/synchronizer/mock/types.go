// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	apisix "github.com/TencentBlueKing/blueking-apigateway-operator/pkg/apisix"
	gomock "github.com/golang/mock/gomock"
)

// MockApisixConfigStore is a mock of ApisixConfigStore interface.
type MockApisixConfigStore struct {
	ctrl     *gomock.Controller
	recorder *MockApisixConfigStoreMockRecorder
}

// MockApisixConfigStoreMockRecorder is the mock recorder for MockApisixConfigStore.
type MockApisixConfigStoreMockRecorder struct {
	mock *MockApisixConfigStore
}

// NewMockApisixConfigStore creates a new mock instance.
func NewMockApisixConfigStore(ctrl *gomock.Controller) *MockApisixConfigStore {
	mock := &MockApisixConfigStore{ctrl: ctrl}
	mock.recorder = &MockApisixConfigStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApisixConfigStore) EXPECT() *MockApisixConfigStoreMockRecorder {
	return m.recorder
}

// Alter mocks base method.
func (m *MockApisixConfigStore) Alter(ctx context.Context, stageName string, config *apisix.ApisixConfiguration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Alter", ctx, stageName, config)
	ret0, _ := ret[0].(error)
	return ret0
}

// Alter indicates an expected call of Alter.
func (mr *MockApisixConfigStoreMockRecorder) Alter(ctx, stageName, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Alter", reflect.TypeOf((*MockApisixConfigStore)(nil).Alter), ctx, stageName, config)
}

// Get mocks base method.
func (m *MockApisixConfigStore) Get(stageName string) *apisix.ApisixConfiguration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", stageName)
	ret0, _ := ret[0].(*apisix.ApisixConfiguration)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockApisixConfigStoreMockRecorder) Get(stageName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockApisixConfigStore)(nil).Get), stageName)
}

// GetAll mocks base method.
func (m *MockApisixConfigStore) GetAll() map[string]*apisix.ApisixConfiguration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(map[string]*apisix.ApisixConfiguration)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockApisixConfigStoreMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockApisixConfigStore)(nil).GetAll))
}
