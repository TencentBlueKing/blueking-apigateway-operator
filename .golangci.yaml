version: "2"
run:
  concurrency: 4
  issues-exit-code: 1
  tests: false
linters:
  enable:
    - revive
    - gocritic
    - gocyclo
    - lll
    - misspell
    - nakedret
    - nilerr
    - staticcheck
    - whitespace
  disable:
    - errcheck
  settings:
    staticcheck:
      checks:
        - all
        - -QF1008
        - -QF1001
        - -ST1003
        - -ST1011
    revive:
      severity: error
      enable-all-rules: false
      rules:
        - name: package-comments
          severity: error
          disabled: false
          exclude: []
        - name: exported
          severity: error
          disabled: false
          exclude: []
          arguments:
            - "check-private-receivers"
            - "disableStutteringCheck"
            - "disable-checks-on-constants"
            - "disable-checks-on-types"
            - "disable-checks-on-variables"

    lll:
      # Max line length, lines longer will be reported.
      # '\t' is counted as 1 character by default, and can be changed with the tab-width option.
      # Default: 120.
      line-length: 120
      # Tab width in spaces.
      # Default: 1
      tab-width: 1

  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - tests/integration/*.go
      - examples$
issues:
  uniq-by-line: false
  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing large codebase.
  # It's not practical to fix all existing issues at the moment of integration:
  # much better don't allow issues in new code.
  #
  # Default: false
  new: false
  # Show only new issues created after the best common ancestor (merge-base against HEAD).
  # Default: ""
  new-from-merge-base: master
  # Show only new issues created after git revision `REV`.
  # Default: ""
  new-from-rev: HEAD
  # Show only new issues created in git patch with set file path.
  # Default: ""
  new-from-patch: ""
  # Show issues in any part of update files (requires new-from-rev or new-from-patch).
  # Default: false
  whole-files: true
  # Fix found issues (if it's supported by the linter).
  # Default: false
  fix: true

formatters:
  enable:
    - gofmt
    - goimports
  settings:
    gofmt:
      # Simplify code: gofmt with `-s` option.
      # Default: true
      simplify: false
      # Apply the rewrite rules to the source before reformatting.
      # https://pkg.go.dev/cmd/gofmt
      # Default: []
      rewrite-rules:
        - pattern: 'a[b:len(a)]'
          replacement: 'a[b:]'
    goimports:
      local-prefixes:
        - github.com/TencentBlueKing/blueking-apigateway-operator
  exclusions:
    generated: lax
    paths:
      - third_party$
      - tests/integration/*.go
      - builtin$
      - examples$